{"version":3,"sources":["../node_modules/is-number/index.js","../node_modules/is-odd/index.js","prueba.js"],"names":["module","exports","isNumber","num","number","trim","require","isOdd","value","n","Math","abs","TypeError","Number","isInteger","Error","isSafeInteger","console","log"],"mappings":"AAAA,ACAA;;ACAA;;;;AFOA,ACAA,ACLAiB,OAAO,CAACC,GAAR,CAAY,oBAAM,GAAN,CAAZ;;AFOAlB,ACAA,MDAM,ACAAE,CDACD,OAAP,ACAc,GDAG,ACAAK,OAAO,CAAC,CDACJ,QAAT,CAAkBC,CCAX,CAAxB,CDAiB,EAAuB;AACtC,MAAIC,MAAM,GAAG,CAACD,GAAd;ACCFH,MAAM,CAACC,OAAP,GAAiB,SAASM,KAAT,CAAeC,KAAf,EAAsB;ADCrC,ACAA,MDAKJ,ECACK,CAAC,GDAI,ACADC,GDAIN,CCAA,CAACO,GAAL,CDAN,ACAeH,KDAO,ACAhB,CDAV,ACAA,EDA6B;AAC3B;AACA,ACDF,MAAI,CAACN,IDCI,ICDI,CDCX,ACDYO,CAAD,CAAb,EAAkB;ADEjB,ACDC,UAAM,IAAIG,SAAJ,CAAc,mBAAd,CAAN;AACD;ADED,MAAIR,MAAM,KAAKD,GAAf,EAAoB;AAClB,ACFF,MAAI,CAACU,IDEI,ECFE,CAACC,CDEV,QCFG,CAAiBL,CAAjB,CAAL,EAA0B;ADGzB,ACFC,UAAM,IAAIM,KAAJ,CAAU,qBAAV,CAAN;AACD;ADGD,MAAI,OAAOZ,GAAP,KAAe,QAAnB,EAA6B;AAC3B,ACHF,MAAI,CAACU,MAAM,CAACG,aAAP,CAAqBP,CAArB,CAAL,EAA8B;ADI5B,ACHA,UAAM,IAAIM,KAAJ,CAAU,oCAAV,CAAN;ADIA,ACHD,QDGKX,MAAM,KAAK,CAAX,IAAgBD,GAAG,CAACE,IAAJ,OAAe,EAAnC,EAAuC;AACrC,aAAO,KAAP;AACD,ACJH,SAAQI,CAAC,GAAG,CAAL,KAAY,CAAnB;AACD,CAZD;ADgBI,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CArBD","file":"prueba.2de1166e.js","sourceRoot":"..","sourcesContent":["/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isNumber(num) {\n  var number = +num;\n\n  if ((number - number) !== 0) {\n    // Discard Infinity and NaN\n    return false;\n  }\n\n  if (number === num) {\n    return true;\n  }\n\n  if (typeof num === 'string') {\n    // String parsed, both a non-empty whitespace string and an empty string\n    // will have been coerced to 0. If 0 trim the string and see if its empty.\n    if (number === 0 && num.trim() === '') {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\n","/*!\n * is-odd <https://github.com/jonschlinkert/is-odd>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nmodule.exports = function isOdd(value) {\n  const n = Math.abs(value);\n  if (!isNumber(n)) {\n    throw new TypeError('expected a number');\n  }\n  if (!Number.isInteger(n)) {\n    throw new Error('expected an integer');\n  }\n  if (!Number.isSafeInteger(n)) {\n    throw new Error('value exceeds maximum safe integer');\n  }\n  return (n % 2) === 1;\n};\n\n","import isOdd from 'is-odd';\r\n\r\nconsole.log(isOdd('1'));"]}